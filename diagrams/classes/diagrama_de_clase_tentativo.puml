@startuml
'https://plantuml.com/class-diagram

class Jugador {
    -nombre: String
    +Jugador(int cantidadVida, int cantidadCreditos)
    +getVida() : int
    +obtenerCreditos(): int
    +restarCreditos(int : cantidad) : void
    +sumarCreditos(int : cantidad) : void
    +recibirDaño(int : cantidad) : void

}
Jugador  *-->  Creditos
Jugador  *-->  Vida

class Creditos {
    -valor: int
    +Creditos(int : cantidadCreditos)
    + cantidad() : int
    +restarCreditos(int : cantidad) : void
    +sumarCreditos(int : cantidad) : void
}

class Vida {
    -cantidad: int
    +Vida(int cantidadVida)
    +quitar(int danio) : void
    +estaMuerto(): boolean
    +cantidad() : int
}

abstract class Defensa {
    -coste: int
    +construirDefensa(String nombre, Jugador jugador)
    +atacar(Jugador jugador): boolean
    +coste() : int
    +estaOperativa(): boolean
    +construir():void
    +setParcela(Parcela parcela):void
    +distancia(Parcela parcela): int
}

Defensa ..>Jugador
Defensa *--> sistemaDeAtaque
Defensa *--> turnosNecesarios
Defensa *--> Parcela
Defensa <|.. TorreBlanca
Defensa <|.. TorrePlateada


class sistemaDeAtaque{
    -daño: int
    -rango: int
    +SistemaDeAtaque(int daño, int rango)
    +atacar(Enemigo objetivo, Jugador jugador, Defensa defensa) : boolean
    -puedeAtacar(Enemigo objetivo, Defensa defensa): boolean
}
sistemaDeAtaque..>Enemigo
sistemaDeAtaque..>Jugador
sistemaDeAtaque..>Defensa

class turnosNecesarios{
    -turnosFaltantes: int
    +TurnosNecesarios(int turnos)
    +estaOperativa(): Bool
    +construir()
}

class TorreBlanca{
    +atacar(Enemigo : enemigo): void
}

class TorrePlateada{
    +atacar(Enemigo: enemigo): void
}


interface Parcela {
    +ubicar(Defensa : defensa): void
}

class InterfazGrafica {}

class Tierra {
    +ubicar(Defensa : defensa): void
}

class Rocoso {
    +ubicar(Defensa : defensa): void
}

abstract class Pasarela {
    +ubicar(Defensa : defensa): void
}

class Meta {}
class Largada {}

abstract class Enemigo {
    +recibirAtaque(Defensa : defensa): void
    +destruirse(): void
    +atacar(Jugador : jugador): void
}

class Hormiga {
    +destruirse(): void
    +atacar(Jugador : jugador): void
}

class Arania {
    +destruirse(): void
    +atacar(Jugador : jugador): void
}

class Daño {
    +atacar(Jugador : jugador): void
}

class Velocidad {
    +moverse(): void
}

/'
Jugador  *--> "0..*" Defensa

Defensa <|--- TorreBlanca
Defensa <|--- TorrePlateada
Defensa <..> Enemigo
Defensa *--> turnosNecesarios

Parcela o--> Defensa
Parcela "1..*" <--*  InterfazGrafica
Parcela <|.. Tierra
Parcela <|.. Rocoso
Parcela <|.. Pasarela

Pasarela <|-- Meta
Pasarela <|-- Largada

Enemigo <|-- Hormiga
Enemigo <|-- Arania
Enemigo *--> Daño
Enemigo *--> Velocidad
Enemigo ..> Jugador
Enemigo *--> Vida
Enemigo <--o Parcela'/




@enduml